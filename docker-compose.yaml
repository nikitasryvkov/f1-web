version: '3.9'

networks:
  app-network:

volumes:
  pgdata:

services:
  backend:
    build:
      context: ./Backend/formula
      dockerfile: Dockerfile

  frontend:
    build:
      context: ./Frontend


  db:
    image: postgres:latest
    container_name: postgres_web_course_work
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${PG_DATABASE}"
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - "${PG_PORT}:${PG_PORT}"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${PG_USER} -d $${PG_DATABASE}" ]
      interval: 120s
      timeout: 10s
      retries: 5

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

    

